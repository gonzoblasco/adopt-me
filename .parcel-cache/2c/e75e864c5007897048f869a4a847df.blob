var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _useBreedList = require('./useBreedList');
  var _useBreedListDefault = _parcelHelpers.interopDefault(_useBreedList);
  var _Pet = require('./Pet');
  var _PetDefault = _parcelHelpers.interopDefault(_Pet);
  var _reactJsxRuntime = require("react/jsx-runtime");
  var _s = $RefreshSig$();
  const ANIMALS = ['bird', 'cat', 'dog', 'rabbit', 'reptile'];
  const SearchParams = () => {
    _s();
    const [location, updateLocation] = _react.useState('Seattle, WA');
    const [animal, updateAnimal] = _react.useState('');
    const [breed, updateBreed] = _react.useState('');
    const [pets, setPets] = _react.useState([]);
    const breeds = _useBreedListDefault.default(animal);
    _react.useEffect(() => {
      requestPets();
    }, []);
    async function requestPets() {
      const res = await fetch(`http://pets-v2.dev-apis.com/pets?animal=${animal}&location=${location}&breed=${breed}`);
      const json = await res.json();
      setPets(json.pets);
    }
    return (
      /*#__PURE__*/_reactJsxRuntime.jsxs("div", {
        className: "search-params",
        children: [/*#__PURE__*/_reactJsxRuntime.jsxs("form", {
          children: [/*#__PURE__*/_reactJsxRuntime.jsxs("label", {
            htmlFor: "location",
            children: ["Location", /*#__PURE__*/_reactJsxRuntime.jsx("input", {
              id: "location",
              value: location,
              placeholder: "Location",
              onChange: e => updateLocation(e.target.value)
            })]
          }), /*#__PURE__*/_reactJsxRuntime.jsxs("label", {
            htmlFor: "animal",
            children: ["Animal", /*#__PURE__*/_reactJsxRuntime.jsxs("select", {
              id: "animal",
              value: animal,
              onChange: e => updateAnimal(e.target.value),
              onBlur: e => updateAnimal(e.target.value),
              children: [/*#__PURE__*/_reactJsxRuntime.jsx("option", {}), ANIMALS.map(animal => /*#__PURE__*/_reactJsxRuntime.jsx("option", {
                value: animal,
                children: animal
              }, animal))]
            })]
          }), /*#__PURE__*/_reactJsxRuntime.jsxs("label", {
            htmlFor: "breed",
            children: ["Breed", /*#__PURE__*/_reactJsxRuntime.jsxs("select", {
              disabled: !breeds.length,
              id: "breed",
              value: breed,
              onChange: e => updateBreed(e.target.value),
              onBlur: e => updateBreed(e.target.value),
              children: [/*#__PURE__*/_reactJsxRuntime.jsx("option", {}), breeds.map(breed => /*#__PURE__*/_reactJsxRuntime.jsx("option", {
                value: breed,
                children: breed
              }, breed))]
            })]
          }), /*#__PURE__*/_reactJsxRuntime.jsx("button", {
            children: "Submit"
          })]
        }), pets.map(pet => /*#__PURE__*/_reactJsxRuntime.jsx(_PetDefault.default, {
          name: pet.name,
          animal: pet.animal,
          breed: pet.breed
        }, pet.id))]
      })
    );
  };
  _s(SearchParams, "q5TRJ7QBUO9IvOpXcdzqMq4p9bc=", false, function () {
    return [_useBreedListDefault.default];
  });
  _c = SearchParams;
  exports.default = SearchParams;
  var _c;
  $RefreshReg$(_c, "SearchParams");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
